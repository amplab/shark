<% escapeMarkup = false %>
#import(shark.execution.cg.row.CGField)
#import(org.apache.hadoop.hive.serde2.objectinspector.PrimitiveObjectInspector)
#import(org.apache.hadoop.hive.serde2.objectinspector.primitive._)
<%@ import var obj: CGField[_] %>
<%@ var varname: String %>
<%@ var varoi: String %>
#{if(oi.isInstanceOf[PrimitiveObjectInspector]) {if(oi.asInstanceOf[PrimitiveObjectInspector].preferWritable()) { }#
		#match (oi)
		#case(a:TimestampObjectInspector)
			((org.apache.hadoop.hive.serde2.io.TimestampWritable)${varname}).getTimestamp()
		#case(a:StringObjectInspector)
			((org.apache.hadoop.io.Text)${varname}).toString()
		#case(a:DateObjectInspector)
			((org.apache.hadoop.hive.serde2.io.DateWritable)${varname}).get()
		#case(a:BinaryObjectInspector)
			((org.apache.hadoop.io.BytesWritable)${varname}).get()
		#case(a:BooleanObjectInspector)
			((org.apache.hadoop.io.BooleanWritable)${varname}).get()
		#case(a:ByteObjectInspector)
			((org.apache.hadoop.hive.serde2.io.ByteWritable)${varname}).get()
		#case(a:ShortObjectInspector)
			((org.apache.hadoop.hive.serde2.io.ShortWritable)${varname}).get()
		#case(a:FloatObjectInspector)
			((org.apache.hadoop.io.FloatWritable)${varname}).get()
		#case(a:IntObjectInspector)
			((org.apache.hadoop.io.IntWritable)${varname}).get()
		#case(a:LongObjectInspector)
			((org.apache.hadoop.io.LongWritable)${varname}).get()
		#case(a:DoubleObjectInspector)
			((org.apache.hadoop.hive.serde2.io.DoubleWritable)${varname}).get()
		#otherwise
		    {throw new RuntimeException("${oi.getClass().getCanonicalName()} need to be added in the primitive template.");}
		#end
	#{ } else { }#
		#match (oi)
		#case (a:TimestampObjectInspector)
			((java.sql.Timestamp)${varname})
		#case(a:StringObjectInspector)
			((String)${varname})
		#case(a:DateObjectInspector)
			((java.sql.Date)${varname})
		#case(a:BinaryObjectInspector)
			((byte[])${varname})
		#case(a:BooleanObjectInspector)
			((Boolean)${varname})
		#case(a:ByteObjectInspector)
			((Byte)${varname})
		#case(a:ShortObjectInspector)
			((Short)${varname})
		#case(a:FloatObjectInspector)
			((Float)${varname})
		#case(a:IntObjectInspector)
			((Integer)${varname})
		#case(a:LongObjectInspector)
			((Long)${varname})
		#case(a:DoubleObjectInspector)
			((Double)${varname})
		#otherwise
		    {throw new RuntimeException("${oi.getClass().getCanonicalName()} need to be added in the primitive template.");}
		#end
#{ 
    }
} else { 
}#
	#match(oi)
	#case (a:org.apache.hadoop.hive.serde2.objectinspector.StructObjectInspector)
		${clazz}.BUILD(${varoi}, ${varname})
	#case (a:org.apache.hadoop.hive.serde2.objectinspector.UnionObjectInspector)
		${clazz}.BUILD(${varoi}, ${varname})
	#otherwise
		{throw new RuntimeException("${oi.getClass().getCanonicalName()} need to be added in the primitive template.");}
	#end
#{ } }#