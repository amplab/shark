<?xml version='1.0' encoding='UTF-8'?>
<!-- POM file for the Shark project -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>edu.berkeley.cs.amplab</groupId>
  <artifactId>shark_2.9.2</artifactId>
  <packaging>jar</packaging>
  <description>shark</description>
  <version>0.2</version>
  <name>shark</name>
  <organization>
    <name>edu.berkeley.cs.amplab</name>
  </organization>
  <properties>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <encoding>UTF-8</encoding>
    <scala.version>2.9.2</scala.version>
    <deb.install.path>/usr/share/shark</deb.install.path>
    <deb.user>root</deb.user>
    <hive.version>0.9.0-shark</hive.version>

    <!-- Default location, override on the command line if different -->
    <hive.dev.home>${basedir}/../hive</hive.dev.home>
    <hive.build.dir>${hive.dev.home}/build</hive.build.dir>
    <hive.dist.dir>${hive.build.dir}/dist</hive.dist.dir>
  </properties>
  <scm>
    <connection>scm:git:git@github.com:amplab/shark.git</connection>
    <url>scm:git:git@github.com:amplab/shark.git</url>
  </scm>

  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>2.9.2</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>11.0.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>it.unimi.dsi</groupId>
      <artifactId>fastutil</artifactId>
      <version>6.4.2</version>
      <scope>compile</scope>
    </dependency>

    <!-- Hive -->
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-common</artifactId>
      <version>${hive.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-exec</artifactId>
      <version>${hive.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-cli</artifactId>
      <version>${hive.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-serde</artifactId>
      <version>${hive.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-metastore</artifactId>
      <version>${hive.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-service</artifactId>
      <version>${hive.version}</version>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_2.9.2</artifactId>
      <version>1.6.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- This is needed so we can use a Mini ZooKeeper cluster -->
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-hbase-handler</artifactId>
      <version>${hive.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-exec-test</artifactId>
      <version>${hive.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <id>TypesafeRepository</id>
      <name>Typesafe Repository</name>
      <url>http://repo.typesafe.com/typesafe/releases/</url>
      <layout>default</layout>
    </repository>
    <repository>
      <id>JBossRepository</id>
      <name>JBoss Repository</name>
      <url>http://repository.jboss.org/nexus/content/repositories/releases/</url>
      <layout>default</layout>
    </repository>
    <repository>
      <id>SprayRepository</id>
      <name>Spray Repository</name>
      <url>http://repo.spray.cc/</url>
      <layout>default</layout>
    </repository>
    <repository>
      <id>DataNucleusRepository</id>
      <name>DataNucleus Repository</name>
      <url>http://www.datanucleus.org/downloads/maven2/</url>
      <layout>default</layout>
    </repository>
  </repositories>

  <build>
    <outputDirectory>target/scala-${scala.version}/classes</outputDirectory>
    <testOutputDirectory>target/scala-${scala.version}/test-classes</testOutputDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <executions>
          <execution>
            <id>scala-compile-first</id>
            <phase>process-resources</phase>
            <goals>
              <goal>add-source</goal>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>scala-test-compile</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>add-source</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <useFile>false</useFile>
          <disableXmlReport>true</disableXmlReport>
          <!-- If you have classpath issue like NoDefClassError,... -->
          <!-- useManifestOnlyJar>false</useManifestOnlyJar -->
          <includes>
            <include>**/TestSharkCliDriver.*</include>
          </includes>
          <environmentVariables>
            <HIVE_HOME>${hive.dist.dir}</HIVE_HOME>
            <HIVE_DEV_HOME>${hive.dev.home}</HIVE_DEV_HOME>
          </environmentVariables>
          <systemPropertyVariables>
            <!-- This is necessary to put ZooKeeper temporary files in the correct location -->
            <user.dir>${hive.build.dir}</user.dir>
            <test.data.files>${hive.dev.home}</test.data.files>
            <test.silent>false</test.silent>
          </systemPropertyVariables>
          <workingDirectory>${hive.build.dir}</workingDirectory>
          <additionalClasspathElements>
            <additionalClasspathElement>${hive.dist.dir}/conf</additionalClasspathElement>
          </additionalClasspathElements>
          <argLine>-Xmx2048m -Xms256m -XX:-UseSplitVerifier</argLine>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <version>1.0-M2</version>
        <configuration>
          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
          <junitxml>.</junitxml>
          <filereports>WDF TestSuite.txt</filereports>
          <argLine>-Xms64m -Xmx1024m -XX:-UseSplitVerifier</argLine>
          <environmentVariables>
            <HIVE_HOME>${hive.dist.dir}</HIVE_HOME>
            <HIVE_DEV_HOME>${hive.dev.home}</HIVE_DEV_HOME>
            <HIVE_VERSION>${hive.version}</HIVE_VERSION>
            <SHARK_LAUNCH_WITH_JAVA>1</SHARK_LAUNCH_WITH_JAVA>
            <TEST_JAVA_OPTS>-XX:-UseSplitVerifier</TEST_JAVA_OPTS>
          </environmentVariables>
        </configuration>
        <executions>
          <execution>
            <id>test</id>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.0</version>
        <configuration>
          <shadedArtifactAttached>true</shadedArtifactAttached>
          <shadedClassifierName>shaded-hadoop2</shadedClassifierName>
          <keepDependenciesWithProvidedScope>false</keepDependenciesWithProvidedScope>
          <artifactSet>
            <excludes>
              <!-- Old Netty versions break Akka. The new groupId is io.netty. -->
              <exclude>org.jboss.netty:*</exclude>
              <!-- Hive is included separately, not as part of the fat jar. -->
              <exclude>org.apache.hadoop.hive:*</exclude>
            </excludes>
          </artifactSet>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
              </excludes>
            </filter>
          </filters>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer
                    implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                <transformer
                    implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>reference.conf</resource>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <!-- Separate profiles for Hadoop 1 and 2 -->
  <profiles>
    <profile>
      <id>hadoop1</id>
      <properties>
        <classifier>hadoop1</classifier>
        <hadoop.major.version>1</hadoop.major.version>
        <hadoop.version>0.20.205.0</hadoop.version>
      </properties>
      <dependencies>
        <!-- Hadoop -->
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-core</artifactId>
          <version>${hadoop.version}</version>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-tools</artifactId>
          <version>${hadoop.version}</version>
        </dependency>
        <!-- Spark -->
        <dependency>
          <groupId>org.spark-project</groupId>
          <artifactId>spark-core_2.9.2</artifactId>
          <version>0.6.0</version>
        </dependency>
        <dependency>
          <groupId>org.spark-project</groupId>
          <artifactId>spark-repl_2.9.2</artifactId>
          <version>0.6.0</version>
        </dependency>
        <!-- Test -->
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-test</artifactId>
          <version>${hadoop.version}</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>hadoop2</id>
      <properties>
        <hadoop.major.version>2</hadoop.major.version>
        <hadoop.version>2.0.0-mr1-cdh4.1.1</hadoop.version>
        <classifier>hadoop2</classifier>
      </properties>
      <dependencies>
        <!-- Hadoop -->
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-core</artifactId>
          <version>${hadoop.version}</version>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-client</artifactId>
          <version>${hadoop.version}</version>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-tools</artifactId>
          <version>${hadoop.version}</version>
        </dependency>
        <!-- Spark -->
        <dependency>
          <groupId>org.spark-project</groupId>
          <artifactId>spark-core</artifactId>
          <version>0.6.1-SNAPSHOT</version>
          <classifier>hadoop2</classifier>
        </dependency>
        <dependency>
          <groupId>org.spark-project</groupId>
          <artifactId>spark-repl</artifactId>
          <version>0.6.1-SNAPSHOT</version>
        </dependency>
        <!-- Test -->
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-test</artifactId>
          <version>${hadoop.version}</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>deb</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>buildnumber-maven-plugin</artifactId>
            <version>1.1</version>
            <executions>
              <execution>
                <phase>validate</phase>
                <goals>
                  <goal>create</goal>
                </goals>
                <configuration>
                  <shortRevisionLength>8</shortRevisionLength>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.vafer</groupId>
            <artifactId>jdeb</artifactId>
            <version>0.11</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>jdeb</goal>
                </goals>
                <configuration>
                  <deb>
                    ${project.build.directory}/${project.artifactId}-${classifier}_${project.version}-${buildNumber}.deb
                  </deb>
                  <dataSet>
                    <data>
                      <src>
                        ${project.build.directory}/${project.artifactId}-${project.version}-shaded-${classifier}.jar
                      </src>
                      <type>file</type>
                      <mapper>
                        <type>perm</type>
                        <user>${deb.user}</user>
                        <group>${deb.user}</group>
                        <prefix>${deb.install.path}/lib</prefix>
                      </mapper>
                    </data>
                    <data>
                      <src>${basedir}/run</src>
                      <type>file</type>
                      <mapper>
                        <type>perm</type>
                        <user>${deb.user}</user>
                        <group>${deb.user}</group>
                        <prefix>${deb.install.path}</prefix>
                        <filemode>744</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${basedir}/bin</src>
                      <type>directory</type>
                      <mapper>
                        <type>perm</type>
                        <user>${deb.user}</user>
                        <group>${deb.user}</group>
                        <prefix>${deb.install.path}/bin</prefix>
                        <filemode>744</filemode>
                      </mapper>
                    </data>
                  </dataSet>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
