<?xml version='1.0' encoding='UTF-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>edu.berkeley.cs.amplab</groupId>
  <artifactId>shark</artifactId>
  <packaging>jar</packaging>
  <description>shark</description>
  <version>0.3.0-SNAPSHOT</version>
  <name>shark</name>
  <organization>
    <name>edu.berkeley.cs.amplab</name>
  </organization>
  <properties>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <encoding>UTF-8</encoding>
    <scala.version>2.9.2</scala.version>
    <hive.version>0.9.0</hive.version>
    <spark.version>0.7.0-SNAPSHOT</spark.version>
    <cdh.version>4.1.2</cdh.version>
    <java.version>1.5</java.version>

    <deb.pkg.name>shark-${classifier}</deb.pkg.name>
    <deb.install.path>/usr/share/shark-${classifier}</deb.install.path>
    <deb.user>root</deb.user>
    <deb.hive.dependency>${hive.version}</deb.hive.dependency>

    <ql.build.path>${hive.dev.home}/build/ql</ql.build.path>

    <!-- Default location, override on the command line if different -->
    <hive.dev.home>${basedir}/../hive</hive.dev.home>
    <hive.build.dir>${hive.dev.home}/build</hive.build.dir>
    <hive.dist.dir>${hive.build.dir}/dist</hive.dist.dir>

    <test.mem>1024m</test.mem>
    <test.jvm.args>-Xmx${test.mem} -Xms${test.mem} -XX:-UseSplitVerifier</test.jvm.args>
  </properties>
  <scm>
    <connection>scm:git:git@github.com:amplab/shark.git</connection>
    <url>scm:git:git@github.com:amplab/shark.git</url>
  </scm>

  <repositories>
    <repository>
      <id>TypesafeRepository</id>
      <name>Typesafe Repository</name>
      <url>http://repo.typesafe.com/typesafe/releases/</url>
      <layout>default</layout>
    </repository>
    <repository>
      <id>JBossRepository</id>
      <name>JBoss Repository</name>
      <url>http://repository.jboss.org/nexus/content/repositories/releases/</url>
      <layout>default</layout>
    </repository>
    <repository>
      <id>SprayRepository</id>
      <name>Spray Repository</name>
      <url>http://repo.spray.cc/</url>
      <layout>default</layout>
    </repository>
    <repository>
      <id>DataNucleusRepository</id>
      <name>DataNucleus Repository</name>
      <url>http://www.datanucleus.org/downloads/maven2/</url>
      <layout>default</layout>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>oss-sonatype-releases</id>
      <name>OSS Sonatype</name>
      <url>https://oss.sonatype.org/content/repositories/releases</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>oss-sonatype-snapshots</id>
      <name>OSS Sonatype</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>oss-sonatype</id>
      <name>OSS Sonatype</name>
      <url>https://oss.sonatype.org/content/groups/public</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>11.0.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>it.unimi.dsi</groupId>
      <artifactId>fastutil</artifactId>
      <version>6.4.2</version>
      <scope>compile</scope>
    </dependency>

    <!-- Hive -->
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-common</artifactId>
      <version>${hive.version}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-exec</artifactId>
      <version>${hive.version}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-cli</artifactId>
      <version>${hive.version}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-serde</artifactId>
      <version>${hive.version}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-metastore</artifactId>
      <version>${hive.version}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-service</artifactId>
      <version>${hive.version}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-builtins</artifactId>
      <version>${hive.version}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-jdbc</artifactId>
      <version>${hive.version}</version>
      <optional>true</optional>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.version}</artifactId>
      <version>1.6.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- This is needed so we can use a Mini ZooKeeper cluster -->
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-hbase-handler</artifactId>
      <version>${hive.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-exec-test</artifactId>
      <version>${hive.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <outputDirectory>${project.build.directory}/scala-${scala.version}/classes</outputDirectory>
    <testOutputDirectory>${project.build.directory}/scala-${scala.version}/test-classes</testOutputDirectory>
    <plugins>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>scala-compile-first</id>
            <phase>process-resources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>scala-test-compile-first</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
          <execution>
            <id>attach-scaladocs</id>
            <phase>verify</phase>
            <goals>
              <goal>doc-jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <scalaVersion>${scala.version}</scalaVersion>
          <recompileMode>incremental</recompileMode>
          <args>
            <arg>-unchecked</arg>
            <arg>-optimise</arg>
          </args>
          <jvmArgs>
            <jvmArg>-Xms64m</jvmArg>
            <jvmArg>-Xmx1024m</jvmArg>
          </jvmArgs>
          <javacArgs>
            <javacArg>-source</javacArg>
            <javacArg>${java.version}</javacArg>
            <javacArg>-target</javacArg>
            <javacArg>${java.version}</javacArg>
          </javacArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.5.1</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <encoding>UTF-8</encoding>
          <maxmem>1024m</maxmem>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <useFile>false</useFile>
          <disableXmlReport>true</disableXmlReport>
          <includes>
            <include>**/TestSharkCliDriver.class</include>
          </includes>
          <environmentVariables>
            <HIVE_HOME>${hive.dist.dir}</HIVE_HOME>
            <HIVE_DEV_HOME>${hive.dev.home}</HIVE_DEV_HOME>
            <TEST_FILE>${project.basedir}/src/test/tests_pass.txt</TEST_FILE>
          </environmentVariables>
          <systemPropertyVariables>
            <user.dir>${hive.build.dir}</user.dir>
            <test.silent>false</test.silent>
            <hive.version>${hive.version}</hive.version>
            <build.dir>${hive.dev.home}/build/ql</build.dir>
            <build.dir.hive>${hive.dev.home}/build</build.dir.hive>
            <build.ivy.lib.dir>${hive.dev.home}/build/ivy/lib</build.ivy.lib.dir>
            <log4j.configuration>file://${hive.dev.home}/data/conf/hive-log4j.properties</log4j.configuration>
            <test.log.dir>${ql.build.path}/test/logs</test.log.dir>
            <test.output.overwrite>false</test.output.overwrite>
            <test.src.data.dir>${hive.dev.home}/data</test.src.data.dir>
            <test.tmp.dir>${ql.build.path}/tmp</test.tmp.dir>
            <test.warehouse.dir>${ql.build.path}/test/data/warehouse</test.warehouse.dir>
            <derby.version>10.4.2.0</derby.version>
          </systemPropertyVariables>
          <workingDirectory>${hive.build.dir}</workingDirectory>
          <additionalClasspathElements>
            <additionalClasspathElement>${basedir}/src/test/conf</additionalClasspathElement>
          </additionalClasspathElements>
          <argLine>${test.jvm.args}</argLine>
          <!-- This is necessary so we can run Scala tests even if there are failures here. -->
          <testFailureIgnore>true</testFailureIgnore>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <version>1.0-M2</version>
        <configuration>
          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
          <junitxml>.</junitxml>
          <filereports>WDF TestSuite.txt</filereports>
          <argLine>${test.jvm.args}</argLine>
          <environmentVariables>
            <HIVE_HOME>${hive.dist.dir}</HIVE_HOME>
            <HIVE_DEV_HOME>${hive.dev.home}</HIVE_DEV_HOME>
            <HIVE_VERSION>${hive.version}</HIVE_VERSION>
            <SHARK_LAUNCH_WITH_JAVA>1</SHARK_LAUNCH_WITH_JAVA>
            <TEST_JAVA_OPTS>-XX:-UseSplitVerifier</TEST_JAVA_OPTS>
          </environmentVariables>
        </configuration>
        <executions>
          <execution>
            <id>test</id>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>add-scala-sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/main/scala</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-scala-test-sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/test/scala</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.2.1</version>
        <configuration>
          <attach>true</attach>
        </configuration>
        <executions>
          <execution>
            <id>create-source-jar</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <!-- To make the shade plugin happy (hack to work around MSHADE-134) -->
            <id>normal-jar</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
          <execution>
            <id>classifier-jar</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <classifier>${classifier}</classifier>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.0</version>
        <configuration>
          <shadedArtifactAttached>true</shadedArtifactAttached>
          <shadedClassifierName>shaded-${classifier}</shadedClassifierName>
          <artifactSet>
            <excludes>
              <!-- Old Netty versions break Akka. The new groupId is io.netty. -->
              <exclude>org.jboss.netty:*</exclude>
              <!-- Hive is included separately, not as part of the fat jar. -->
              <exclude>org.apache.hive:*</exclude>
            </excludes>
          </artifactSet>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
              </excludes>
            </filter>
          </filters>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>reference.conf</resource>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.9</version>
        <configuration>
          <additionalProjectnatures>
            <projectnature>org.scala-ide.sdt.core.scalanature</projectnature>
          </additionalProjectnatures>
          <buildcommands>
            <buildcommand>org.scala-ide.sdt.core.scalabuilder</buildcommand>
          </buildcommands>
          <sourceIncludes>
            <sourceInclude>**/*.scala</sourceInclude>
          </sourceIncludes>
          <classpathContainers>
            <classpathContainer>org.scala-ide.sdt.launching.SCALA_CONTAINER</classpathContainer>
          </classpathContainers>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.2</version>
        <executions>
          <execution>
            <id>enforce-property</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireProperty>
                  <property>hadoop.major.version</property>
                  <message>You must specify -Phadoop1 or -Phadoop2</message>
                </requireProperty>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <!-- Separate profiles for Hadoop 1 and 2 -->
  <profiles>
    <profile>
      <id>hadoop1</id>
      <properties>
        <classifier>hadoop1</classifier>
        <hadoop.major.version>1</hadoop.major.version>
        <hadoop.version>0.20.205.0</hadoop.version>
      </properties>
      <dependencies>
        <!-- Hadoop -->
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-core</artifactId>
          <version>${hadoop.version}</version>
          <optional>true</optional>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-tools</artifactId>
          <version>${hadoop.version}</version>
          <optional>true</optional>
        </dependency>
        <!-- Spark -->
        <dependency>
          <groupId>org.spark-project</groupId>
          <artifactId>spark-core</artifactId>
          <version>${spark.version}</version>
          <classifier>hadoop1</classifier>
        </dependency>
        <dependency>
          <groupId>org.spark-project</groupId>
          <artifactId>spark-repl</artifactId>
          <version>${spark.version}</version>
          <classifier>hadoop1</classifier>
        </dependency>
        <!-- Test -->
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-test</artifactId>
          <version>${hadoop.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>hadoop2</id>
      <properties>
        <hadoop.major.version>2</hadoop.major.version>
        <hadoop.version>2.0.0-mr1-cdh${cdh.version}</hadoop.version>
        <classifier>hadoop2</classifier>
      </properties>
      <dependencies>
        <!-- Hadoop -->
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-core</artifactId>
          <version>${hadoop.version}</version>
          <optional>true</optional>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-client</artifactId>
          <version>${hadoop.version}</version>
          <optional>true</optional>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-tools</artifactId>
          <version>${hadoop.version}</version>
          <optional>true</optional>
        </dependency>
        <!-- Spark -->
        <dependency>
          <groupId>org.spark-project</groupId>
          <artifactId>spark-core</artifactId>
          <version>${spark.version}</version>
          <classifier>hadoop2</classifier>
        </dependency>
        <dependency>
          <groupId>org.spark-project</groupId>
          <artifactId>spark-repl</artifactId>
          <version>${spark.version}</version>
          <classifier>hadoop2</classifier>
        </dependency>
        <!-- Test -->
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-test</artifactId>
          <version>${hadoop.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>deb</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>buildnumber-maven-plugin</artifactId>
            <version>1.1</version>
            <executions>
              <execution>
                <phase>validate</phase>
                <goals>
                  <goal>create</goal>
                </goals>
                <configuration>
                  <shortRevisionLength>8</shortRevisionLength>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.vafer</groupId>
            <artifactId>jdeb</artifactId>
            <version>0.11</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>jdeb</goal>
                </goals>
                <configuration>
                  <deb>${project.build.directory}/${deb.pkg.name}_${project.version}-${buildNumber}_all.deb</deb>
                  <attach>false</attach>
                  <compression>gzip</compression>
                  <dataSet>
                    <data>
                      <src>${project.build.directory}/${project.artifactId}-${project.version}-shaded-${classifier}.jar</src>
                      <type>file</type>
                      <mapper>
                        <type>perm</type>
                        <user>${deb.user}</user>
                        <group>${deb.user}</group>
                        <prefix>${deb.install.path}/lib</prefix>
                      </mapper>
                    </data>
                    <data>
                      <src>${basedir}/run</src>
                      <type>file</type>
                      <mapper>
                        <type>perm</type>
                        <user>${deb.user}</user>
                        <group>${deb.user}</group>
                        <prefix>${deb.install.path}</prefix>
                        <filemode>744</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${basedir}/bin</src>
                      <type>directory</type>
                      <mapper>
                        <type>perm</type>
                        <user>${deb.user}</user>
                        <group>${deb.user}</group>
                        <prefix>${deb.install.path}/bin</prefix>
                        <filemode>744</filemode>
                      </mapper>
                    </data>
                  </dataSet>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
