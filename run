#!/bin/bash

# This file is used to launch Shark on the master.

# Figure out where the framework is installed
FWDIR="$(cd `dirname $0`; pwd)"

# Export this as SPARK_HOME
export SHARK_HOME="$FWDIR"

# Load environment variables from conf/shark-env.sh, if it exists
if [ -e $SHARK_HOME/conf/shark-env.sh ] ; then
  . $SHARK_HOME/conf/shark-env.sh
fi

if [ -n "$MASTER" ] ; then
  if [ -z $SPARK_HOME ] ; then
    echo "No SPARK_HOME specified. Please set SPARK_HOME for cluster mode."
    exit 1
  fi
fi

# Hive related section.
if [ "x$HIVE_HOME" == "x" ] ; then
    echo "No HIVE_HOME specified. Please set HIVE_HOME"
    exit 1
fi

# Check for optionally specified configuration file path
if [ "x$HIVE_CONF_DIR" == "x" ] ; then
    HIVE_CONF_DIR="$HIVE_HOME/conf"
fi

if [ -f "${HIVE_CONF_DIR}/hive-env.sh" ]; then
  . "${HIVE_CONF_DIR}/hive-env.sh"
fi

# Add Shark jars.
for jar in `find $SHARK_HOME/lib -name '*jar'`; do
  SPARK_CLASSPATH+=:$jar
done
for jar in `find $SHARK_HOME/lib_managed/jars -name '*jar'`; do
  SPARK_CLASSPATH+=:$jar
done
for jar in `find $SHARK_HOME/lib_managed/bundles -name '*jar'`; do
  SPARK_CLASSPATH+=:$jar
done

# Add Hive jars.
for jar in `find $HIVE_HOME/lib -name '*jar'`; do
  # Ignore the logging library since it has already been included with the Spark jar.
  if [[ "$jar" != *slf4j* ]]; then
    SPARK_CLASSPATH+=:$jar
  fi
done

SPARK_CLASSPATH+=:$HIVE_CONF_DIR


# Build up classpath
SPARK_CLASSPATH+=":$SHARK_HOME/target/scala-$SCALA_VERSION/classes"
SPARK_CLASSPATH+=":$SHARK_HOME/target/scala-$SCALA_VERSION/test-classes"


if [ "x$HADOOP_HOME" == "x" ] ; then
    echo "No HADOOP_HOME specified. Shark will run in local-mode"
else
    SPARK_CLASSPATH+=:$HADOOP_HOME/conf
fi


# TODO(rxin): Check aux classpath and aux java opts.
#CLASSPATH=${CLASSPATH}:${AUX_CLASSPATH}

export SPARK_CLASSPATH
export CLASSPATH=$SPARK_CLASSPATH # Needed for spark-shell

export SPARK_JAVA_OPTS+=" $TEST_JAVA_OPTS"


if [ "x$SHARK_MASTER_MEM" == "x" ] ; then
  SHARK_MASTER_MEM="512m"
fi

# Set JAVA_OPTS to be able to load native libraries and to set heap size
JAVA_OPTS="$SPARK_JAVA_OPTS"
JAVA_OPTS+=" -Djava.library.path=$SPARK_LIBRARY_PATH"
JAVA_OPTS+=" -Xms$SHARK_MASTER_MEM -Xmx$SHARK_MASTER_MEM"

# In case we are running Ant
export ANT_OPTS=$JAVA_OPTS

if [ -n "$SCALA_HOME" ]; then
  SCALA=${SCALA_HOME}/bin/scala
else
  SCALA=scala
fi

if [ "x$RUNNER" == "x" ] ; then
  if [ "$SHARK_LAUNCH_WITH_JAVA" == "1" ]; then
    CLASSPATH+=":$SCALA_HOME/lib/scala-library.jar"
    CLASSPATH+=":$SCALA_HOME/lib/scala-compiler.jar"
    CLASSPATH+=":$SCALA_HOME/lib/jline.jar"
    if [ -n "$JAVA_HOME" ]; then
      RUNNER="${JAVA_HOME}/bin/java"
    else
      RUNNER=java
    fi
    # The JVM doesn't read JAVA_OPTS by default so we need to pass it in
    EXTRA_ARGS="$JAVA_OPTS"
  else
    RUNNER="$SCALA -cp $CLASSPATH"
    EXTRA_ARGS=""
  fi
fi

exec $RUNNER $EXTRA_ARGS "$@"
